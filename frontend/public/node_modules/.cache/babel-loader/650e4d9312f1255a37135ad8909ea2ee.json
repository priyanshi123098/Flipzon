{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import styles from \"./styles.module.css\";\n// import { Link } from \"react-router-dom\";\n// const OrderHistory = () => {\n//     const [orders, setOrders] = useState([]);\n//     const [message, setMessage] = useState(\"\");\n//     const [reviewInputs, setReviewInputs] = useState({});\n\n//     useEffect(() => {\n//         fetchOrders();\n//     }, []);\n\n//     const fetchOrders = async () => {\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             if (!token) {\n//                 setMessage(\"No token found\");\n//                 return;\n//             }\n//             const url = `${process.env.REACT_APP_API_URL}/api/cart/buyer-orders`;\n//             const { data } = await axios.get(url, {\n//                 headers: { \n//                     Authorization: `Bearer ${token}`,\n//                     'Content-Type': 'application/json'\n//                 },\n//             });\n//             setOrders(data);\n//         } catch (error) {\n//             console.error(\"Error fetching orders:\", error);\n//             setMessage(\"Error fetching orders\");\n//         }\n//     };\n//     const handleReviewChange = (orderID, value) => {\n//         setReviewInputs({\n//             ...reviewInputs,\n//             [orderID]: value\n//         });\n//     };\n//     const handleAddReview = async (orderID, sellerID) => {\n//         try {\n//             const review = reviewInputs[orderID];\n//             const token = localStorage.getItem(\"token\");\n//             if (!token) {\n//                 setMessage(\"No token found\");\n//                 return;\n//             }\n//             const url = `${process.env.REACT_APP_API_URL}/api/users/add-review`;\n//             const { data: res } = await axios.post(url, { sellerID, review }, {\n//                 headers: { \n//                     Authorization: `Bearer ${token}`,\n//                     'Content-Type': 'application/json'\n//                 },\n//             });\n//             setMessage(res.message);\n//             setReviewInputs({\n//                 ...reviewInputs,\n//                 [orderID]: \"\"\n//             });\n//         } catch (error) {\n//             console.error(\"Error adding review:\", error);\n//             setMessage(\"Error adding review\");\n//         }\n//     };\n\n//     const handleLogout = () => {\n//         localStorage.removeItem(\"token\");\n//         window.location.reload();\n//     };\n\n//     return (\n//         <div className={styles.main_container}>\n//             <nav className={styles.navbar}>\n//                 <h1>Flipzon</h1>\n//                 <div className={styles.nav_links}>\n//                     <Link to=\"/\" className={styles.nav_link}>Dashboard</Link>\n//                     <Link to=\"/items\" className={styles.nav_link}>Items</Link>\n//                     <Link to=\"/cart\" className={styles.nav_link}>My Cart</Link>\n//                     <Link to=\"/order-history\" className={styles.nav_link}>Order History</Link>\n//                     <Link to=\"/deliver-item\" className={styles.nav_link}>Deliver Item</Link>\n//                     <Link to=\"/support\" className={styles.nav_link}>Support</Link>\n//                 </div>\n//                 <button className={styles.white_btn} onClick={handleLogout}>\n//                     Logout\n//                 </button>\n//             </nav>\n//             <div className={styles.orders_container}>\n//                 <h2>Order History</h2>\n//                 {message && <p>{message}</p>}\n//                 {orders.length === 0 ? (\n//                     <p>No orders found</p>\n//                 ) : (\n//                     <div className={styles.orders_list}>\n//                         {orders.map((order) => (\n//                             <div key={order._id} className={styles.order_item}>\n//                                 <h3>Order ID: {order._id}</h3>\n//                                 <p>OTP: {order.otp}</p>\n//                                 <p>Status: {order.status}</p>\n//                                 <div className={styles.items_list}>\n//                                     {order.items.map((item) => (\n//                                         <div key={item.itemID._id} className={styles.item}>\n//                                             <h4>{item.name}</h4>\n//                                             <p>Price: ${item.price}</p>\n//                                             <p>Description: {item.description}</p>\n//                                             <p>Category: {item.category}</p>\n//                                         </div>\n//                                     ))}\n//                                 </div>\n//                                 {order.status === \"Completed\" && (\n//                                     <div className={styles.review_container}>\n//                                         <textarea\n//                                             placeholder=\"Add a review\"\n//                                             value={reviewInputs[order._id] || \"\"}\n//                                             onChange={(e) => handleReviewChange(order._id, e.target.value)}\n//                                             className={styles.textarea}\n//                                         />\n//                                         <button onClick={() => handleAddReview(order._id, order.sellerID)} className={styles.green_btn}>\n//                                             Add Review\n//                                         </button>\n//                                     </div>\n//                                 )}\n//                             </div>\n//                         ))}\n//                     </div>\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default OrderHistory;","map":{"version":3,"names":[],"sources":["/home/priyanshi/Desktop/sem4/DASS/project1/client/src/components/OrderHistory/index.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import styles from \"./styles.module.css\";\n// import { Link } from \"react-router-dom\";\n// const OrderHistory = () => {\n//     const [orders, setOrders] = useState([]);\n//     const [message, setMessage] = useState(\"\");\n//     const [reviewInputs, setReviewInputs] = useState({});\n\n//     useEffect(() => {\n//         fetchOrders();\n//     }, []);\n\n//     const fetchOrders = async () => {\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             if (!token) {\n//                 setMessage(\"No token found\");\n//                 return;\n//             }\n//             const url = `${process.env.REACT_APP_API_URL}/api/cart/buyer-orders`;\n//             const { data } = await axios.get(url, {\n//                 headers: { \n//                     Authorization: `Bearer ${token}`,\n//                     'Content-Type': 'application/json'\n//                 },\n//             });\n//             setOrders(data);\n//         } catch (error) {\n//             console.error(\"Error fetching orders:\", error);\n//             setMessage(\"Error fetching orders\");\n//         }\n//     };\n//     const handleReviewChange = (orderID, value) => {\n//         setReviewInputs({\n//             ...reviewInputs,\n//             [orderID]: value\n//         });\n//     };\n//     const handleAddReview = async (orderID, sellerID) => {\n//         try {\n//             const review = reviewInputs[orderID];\n//             const token = localStorage.getItem(\"token\");\n//             if (!token) {\n//                 setMessage(\"No token found\");\n//                 return;\n//             }\n//             const url = `${process.env.REACT_APP_API_URL}/api/users/add-review`;\n//             const { data: res } = await axios.post(url, { sellerID, review }, {\n//                 headers: { \n//                     Authorization: `Bearer ${token}`,\n//                     'Content-Type': 'application/json'\n//                 },\n//             });\n//             setMessage(res.message);\n//             setReviewInputs({\n//                 ...reviewInputs,\n//                 [orderID]: \"\"\n//             });\n//         } catch (error) {\n//             console.error(\"Error adding review:\", error);\n//             setMessage(\"Error adding review\");\n//         }\n//     };\n\n//     const handleLogout = () => {\n//         localStorage.removeItem(\"token\");\n//         window.location.reload();\n//     };\n\n//     return (\n//         <div className={styles.main_container}>\n//             <nav className={styles.navbar}>\n//                 <h1>Flipzon</h1>\n//                 <div className={styles.nav_links}>\n//                     <Link to=\"/\" className={styles.nav_link}>Dashboard</Link>\n//                     <Link to=\"/items\" className={styles.nav_link}>Items</Link>\n//                     <Link to=\"/cart\" className={styles.nav_link}>My Cart</Link>\n//                     <Link to=\"/order-history\" className={styles.nav_link}>Order History</Link>\n//                     <Link to=\"/deliver-item\" className={styles.nav_link}>Deliver Item</Link>\n//                     <Link to=\"/support\" className={styles.nav_link}>Support</Link>\n//                 </div>\n//                 <button className={styles.white_btn} onClick={handleLogout}>\n//                     Logout\n//                 </button>\n//             </nav>\n//             <div className={styles.orders_container}>\n//                 <h2>Order History</h2>\n//                 {message && <p>{message}</p>}\n//                 {orders.length === 0 ? (\n//                     <p>No orders found</p>\n//                 ) : (\n//                     <div className={styles.orders_list}>\n//                         {orders.map((order) => (\n//                             <div key={order._id} className={styles.order_item}>\n//                                 <h3>Order ID: {order._id}</h3>\n//                                 <p>OTP: {order.otp}</p>\n//                                 <p>Status: {order.status}</p>\n//                                 <div className={styles.items_list}>\n//                                     {order.items.map((item) => (\n//                                         <div key={item.itemID._id} className={styles.item}>\n//                                             <h4>{item.name}</h4>\n//                                             <p>Price: ${item.price}</p>\n//                                             <p>Description: {item.description}</p>\n//                                             <p>Category: {item.category}</p>\n//                                         </div>\n//                                     ))}\n//                                 </div>\n//                                 {order.status === \"Completed\" && (\n//                                     <div className={styles.review_container}>\n//                                         <textarea\n//                                             placeholder=\"Add a review\"\n//                                             value={reviewInputs[order._id] || \"\"}\n//                                             onChange={(e) => handleReviewChange(order._id, e.target.value)}\n//                                             className={styles.textarea}\n//                                         />\n//                                         <button onClick={() => handleAddReview(order._id, order.sellerID)} className={styles.green_btn}>\n//                                             Add Review\n//                                         </button>\n//                                     </div>\n//                                 )}\n//                             </div>\n//                         ))}\n//                     </div>\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default OrderHistory;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module"}