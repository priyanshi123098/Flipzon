{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import styles from \"./styles.module.css\";\n// import { Link } from \"react-router-dom\";\n\n// const Cart = () => {\n//     const [cartItems, setCartItems] = useState([]);\n//     const [message, setMessage] = useState(\"\");\n//     const [totalCost, setTotalCost] = useState(0);\n\n//     useEffect(() => {\n//         fetchCartItems();\n//     }, []);\n\n//     const fetchCartItems = async () => {\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             if (!token) {\n//                 setMessage(\"No token found\");\n//                 return;\n//             }\n//             const url = `${process.env.REACT_APP_API_URL}/api/cart/usercart`;\n//             console.log(\"URL:\", url);\n//             const { data } = await axios.get(url, {\n//                 headers: { \n//                     Authorization: `Bearer ${token}`,\n//                     'Content-Type': 'application/json'\n//                 },\n//             });\n//             console.log(\"Fetched cart items:\", data);\n//             setCartItems(data);\n//             calculateTotalCost(data);\n//         } catch (error) {\n//             console.error(\"Error fetching cart items:\", error);\n//             setMessage(\"Error fetching cart items\");\n//         }\n//     };\n\n//     const calculateTotalCost = (items) => {\n//         const total = items.reduce((sum, item) => sum + item.price, 0);\n//         setTotalCost(total);\n//     };\n\n//     const handleRemoveFromCart = async (itemID) => {\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             const url = `${process.env.REACT_APP_API_URL}/api/cart/remove-from-cart`;\n//             const { data: res } = await axios.post(url, { itemID }, {\n//                 headers: { \n//                     Authorization: `Bearer ${token}`,\n//                     'Content-Type': 'application/json'\n//                 },\n//             });\n//             setMessage(res.message);\n//             console.log(\"Remove from cart:\", res.message);\n//             fetchCartItems(); // Refresh the cart items list\n//         } catch (error) {\n//             console.error(\"Error removing from cart:\", error);\n//         }\n//     };\n\n//     const handleLogout = () => {\n//         localStorage.removeItem(\"token\");\n//         window.location.reload();\n//     };\n\n//     return (\n//         <div className={styles.main_container}>\n//             <nav className={styles.navbar}>\n//                 <h1>Flipzon</h1>\n//                 <div className={styles.nav_links}>\n//                     <Link to=\"/\" className={styles.nav_link}>Dashboard</Link>\n//                     <Link to=\"/items\" className={styles.nav_link}>Items</Link>\n//                     <Link to=\"/cart\" className={styles.nav_link}>My Cart</Link>\n//                     <Link to=\"/order-history\" className={styles.nav_link}>Order History</Link>\n//                     <Link to=\"/deliver-item\" className={styles.nav_link}>Deliver Item</Link>\n//                     <Link to=\"/support\" className={styles.nav_link}>Support</Link>\n//                 </div>\n//                 <button className={styles.white_btn} onClick={handleLogout}>\n//                     Logout\n//                 </button>\n//             </nav>\n//             <div className={styles.cart_container}>\n//                 <h2>My Cart</h2>\n//                 {message && <p>{message}</p>}\n//                 {cartItems.length === 0 ? (\n//                     <p>Your cart is empty</p>\n//                 ) : (\n//                     <div>\n//                         <div className={styles.cart_list}>\n//                             {cartItems.map((cartItem) => (\n//                                 <div key={cartItem._id} className={styles.cart_item}>\n//                                     <h3>{cartItem.name}</h3>\n//                                     <p>Price: ${cartItem.price}</p>\n//                                     <p>Description: {cartItem.description}</p>\n//                                     <p>Category: {cartItem.category}</p>\n//                                     <button onClick={() => handleRemoveFromCart(cartItem._id)} className={styles.red_btn}>\n//                                         Remove from Cart\n//                                     </button>\n//                                 </div>\n//                             ))}\n//                         </div>\n//                         <div className={styles.total_cost}>\n//                             <h3>Total Cost: ${totalCost}</h3>\n//                         </div>\n//                     </div>\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Cart;","map":{"version":3,"names":[],"sources":["/home/priyanshi/Desktop/sem4/DASS/project1/client/src/components/Cart/index.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import styles from \"./styles.module.css\";\n// import { Link } from \"react-router-dom\";\n\n// const Cart = () => {\n//     const [cartItems, setCartItems] = useState([]);\n//     const [message, setMessage] = useState(\"\");\n//     const [totalCost, setTotalCost] = useState(0);\n\n//     useEffect(() => {\n//         fetchCartItems();\n//     }, []);\n\n\n//     const fetchCartItems = async () => {\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             if (!token) {\n//                 setMessage(\"No token found\");\n//                 return;\n//             }\n//             const url = `${process.env.REACT_APP_API_URL}/api/cart/usercart`;\n//             console.log(\"URL:\", url);\n//             const { data } = await axios.get(url, {\n//                 headers: { \n//                     Authorization: `Bearer ${token}`,\n//                     'Content-Type': 'application/json'\n//                 },\n//             });\n//             console.log(\"Fetched cart items:\", data);\n//             setCartItems(data);\n//             calculateTotalCost(data);\n//         } catch (error) {\n//             console.error(\"Error fetching cart items:\", error);\n//             setMessage(\"Error fetching cart items\");\n//         }\n//     };\n\n//     const calculateTotalCost = (items) => {\n//         const total = items.reduce((sum, item) => sum + item.price, 0);\n//         setTotalCost(total);\n//     };\n\n//     const handleRemoveFromCart = async (itemID) => {\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             const url = `${process.env.REACT_APP_API_URL}/api/cart/remove-from-cart`;\n//             const { data: res } = await axios.post(url, { itemID }, {\n//                 headers: { \n//                     Authorization: `Bearer ${token}`,\n//                     'Content-Type': 'application/json'\n//                 },\n//             });\n//             setMessage(res.message);\n//             console.log(\"Remove from cart:\", res.message);\n//             fetchCartItems(); // Refresh the cart items list\n//         } catch (error) {\n//             console.error(\"Error removing from cart:\", error);\n//         }\n//     };\n\n//     const handleLogout = () => {\n//         localStorage.removeItem(\"token\");\n//         window.location.reload();\n//     };\n\n//     return (\n//         <div className={styles.main_container}>\n//             <nav className={styles.navbar}>\n//                 <h1>Flipzon</h1>\n//                 <div className={styles.nav_links}>\n//                     <Link to=\"/\" className={styles.nav_link}>Dashboard</Link>\n//                     <Link to=\"/items\" className={styles.nav_link}>Items</Link>\n//                     <Link to=\"/cart\" className={styles.nav_link}>My Cart</Link>\n//                     <Link to=\"/order-history\" className={styles.nav_link}>Order History</Link>\n//                     <Link to=\"/deliver-item\" className={styles.nav_link}>Deliver Item</Link>\n//                     <Link to=\"/support\" className={styles.nav_link}>Support</Link>\n//                 </div>\n//                 <button className={styles.white_btn} onClick={handleLogout}>\n//                     Logout\n//                 </button>\n//             </nav>\n//             <div className={styles.cart_container}>\n//                 <h2>My Cart</h2>\n//                 {message && <p>{message}</p>}\n//                 {cartItems.length === 0 ? (\n//                     <p>Your cart is empty</p>\n//                 ) : (\n//                     <div>\n//                         <div className={styles.cart_list}>\n//                             {cartItems.map((cartItem) => (\n//                                 <div key={cartItem._id} className={styles.cart_item}>\n//                                     <h3>{cartItem.name}</h3>\n//                                     <p>Price: ${cartItem.price}</p>\n//                                     <p>Description: {cartItem.description}</p>\n//                                     <p>Category: {cartItem.category}</p>\n//                                     <button onClick={() => handleRemoveFromCart(cartItem._id)} className={styles.red_btn}>\n//                                         Remove from Cart\n//                                     </button>\n//                                 </div>\n//                             ))}\n//                         </div>\n//                         <div className={styles.total_cost}>\n//                             <h3>Total Cost: ${totalCost}</h3>\n//                         </div>\n//                     </div>\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Cart;"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}